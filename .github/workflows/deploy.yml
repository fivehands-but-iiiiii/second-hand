name: CICD for fivehands

on:
  push:
    branches: [ "dev/deploy-test" ]
    

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
	
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16"
        cache: "yarn"
	
    - run: |
        touch ./backend/src/main/resources/application-aws.yml
        echo "${{ secrets.APPLICATION_AWS }}" > ./backend/src/main/resources/application-aws.yml
        
        touch ./backend/src/main/resources/application-prod.yml
        echo "${{ secrets.APPLICATION_PROD }}" > ./backend/src/main/resources/application-prod.yml
        
        touch ./backend/src/main/resources/application-oauth.yml
        echo "${{ secrets.APPICATION_OAUTH }}" > ./backend/src/main/resources/application-oauth.yml
     
        touch ./backend/src/main/resources/application-jwt.yml
        echo "${{ secrets.APPLICATION_JWT }}" > ./backend/src/main/resources/application-jwt.yml

	touch ./front-end/.env
	echo "${{ secrets.ENV }}" > ./front-end/.env

    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew clean build
      working-directory: ./backend

    - name: Build with React
      run: |
	cd front-end
	yarn install
	yarn build

    - name: docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --platform amd64 --build-arg DEPENDENCY=build/dependency -f ./docker/Dockerfile-was -t ${{secrets.DOCKER_USERNAME}}/secondhand .
        docker push ${{ secrets.DOCKER_USERNAME }}/secondhand

	docker build --platform amd64 --build-arg -f ./docker/Dockerfile-ws -t ${{ secrets.DOCKER_USERNAME }}/secondhand-ws .
	docker push ${{ secrets.DOCKER_USERNAME }}/secondhand-ws

    - name: Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.HOST }}
        aws-secret-access-key: ${{ secrets.KEY }}
        aws-region: ap-northeast-2


    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32


    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/secondhand
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/secondhand-ws
          sudo docker compose up -d
          sudo docker image prune -a -f
          
    - name: Remove Github Actions IP From Security Group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
