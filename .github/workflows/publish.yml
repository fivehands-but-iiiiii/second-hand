name: Java CI with Gradle

on:
  push:
    branches: [ "dev/BE" ]
    

env:
  working-directory: ./backend

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    - run: |
        touch ./backend/src/main/resources/application-aws.yml
        echo "${{ secrets.APPLICATION_AWS }}" > ./backend/src/main/resources/application-aws.yml
        
        touch ./backend/src/main/resources/application-prod.yml
        echo "${{ secrets.APPLICATION_PROD }}" > ./backend/src/main/resources/application-prod.yml
        
        touch ./backend/src/main/resources/application-oauth.yml
        echo "${{ secrets.APPICATION_OAUTH }}" > ./backend/src/main/resources/application-oauth.yml
     
        touch ./backend/src/main/resources/application-jwt.yml
        echo "${{ secrets.APPLICATION_JWT }}" > ./backend/src/main/resources/application-jwt.yml

    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew clean build
      working-directory: ${{ env.working-directory }}

    - name: docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --platform linux/amd64 --build-arg DEPENDENCY=build/dependency -f ${{ env.working-directory }}/Dockerfile -t ${{secrets.DOCKER_USERNAME}}/secondhand .
        docker push ${{ secrets.DOCKER_USERNAME }}/secondhand


    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/secondhand
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/secondhand-nginx
          sudo docker compose up -d
          sudo docker image prune -a -f
          
          
